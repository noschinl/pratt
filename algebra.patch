# HG changeset patch
# Parent 06db08182c4bb59bc6203924529c938a033a313e
more lemmas for HOL-Algebra


diff --git a/src/HOL/Algebra/Group.thy b/src/HOL/Algebra/Group.thy
--- a/src/HOL/Algebra/Group.thy
+++ b/src/HOL/Algebra/Group.thy
@@ -402,6 +402,56 @@
   "\<one> (^) (z::int) = \<one>"
   by (simp add: int_pow_def2)
 
+lemma (in group) nat_inv_pow_mult:
+  "x \<in> carrier G \<Longrightarrow> inv (x (^) (m + n)) = inv (x (^) (m :: nat)) \<otimes> inv (x (^) n)"
+  by (simp add: inv_mult_group[symmetric] nat_pow_mult nat_add_commute)
+
+lemma (in group) int_pow_mult:
+  assumes [simp]:"x \<in> carrier G"
+  shows "x (^) (m :: int)  \<otimes> x (^) n = x (^) (m + n)"
+proof -
+  { assume A: "m \<ge> 0" "n \<ge> 0"
+    hence "nat m + nat n = nat (m+n)" by auto
+    hence ?thesis using A by (simp add: int_pow_def2 nat_pow_mult) }
+  moreover
+  { assume A: "m < 0" "n < 0"
+    hence "nat (-m) + nat (-n) = nat (-m -n)" by auto
+    hence ?thesis using A by (simp add: int_pow_def2 nat_inv_pow_mult[symmetric]) }
+  moreover
+  { assume A: "m < 0" "n \<ge> 0"
+    hence *: "x (^) m  \<otimes> x (^) n = inv (x (^) nat (- m)) \<otimes> x (^) nat n" by (simp add: int_pow_def2)
+    { assume B: "-m < n"
+      hence "nat n = nat (-m) + nat (m + n)" using A by auto
+      hence "x (^) m  \<otimes> x (^) n = inv (x (^) nat (- m)) \<otimes> x (^) nat (-m) \<otimes> x (^) nat (m + n)"
+        by (simp add: nat_pow_mult[of x, symmetric] * m_assoc[symmetric])
+      hence ?thesis using B by (simp add: int_pow_def2) }
+    moreover
+    { assume B:"-m \<ge> n"
+      hence "nat (-m) = nat (-(m + n)) + nat (n)" using A by auto
+      hence "x (^) m  \<otimes> x (^) n = inv (x (^) nat (-(m+n))) \<otimes> (inv (x (^) nat (n)) \<otimes> x (^) nat n)"
+        by (simp add: * nat_add_commute inv_mult_group nat_pow_mult[of x, symmetric] m_assoc)
+      hence ?thesis using B by (simp add: int_pow_def2) }
+    ultimately have ?thesis by linarith }
+  moreover
+  { assume A: "n < 0" "m \<ge> 0"
+    hence *: "x (^) m  \<otimes> x (^) n = x (^) nat m \<otimes> inv (x (^) nat (-n))" using int_pow_def2 by auto
+    { assume B:"-n < m"
+      hence "nat m = nat (m + n) + nat (-n)" using A by auto
+      hence "x (^) m  \<otimes> x (^) n = x (^) nat (m+n) \<otimes> (x (^) nat (-n)  \<otimes> inv (x (^) nat (- n)))"
+          by (simp add: * nat_pow_mult[of x, symmetric] m_assoc)
+      hence ?thesis using B by (simp add: int_pow_def2) }
+    moreover
+    { assume B: "-n \<ge> m"
+      hence "nat (-n) =  nat (m) + nat (-(m + n))" using A by auto
+      hence "x (^) m  \<otimes> x (^) n =  x (^) nat m \<otimes> inv (x (^) nat (m)) \<otimes> inv (x (^) nat (-(m+n)))"
+        by (simp add: * nat_add_commute[of "nat m" "nat (- m - n)"] nat_pow_mult[of x,symmetric]
+            inv_mult_group m_assoc[symmetric])
+      hence ?thesis using B by (simp add: int_pow_def2) }
+    ultimately have ?thesis by linarith }
+  ultimately show ?thesis by linarith
+qed
+
+
 
 subsection {* Subgroups *}
 
diff --git a/src/HOL/Algebra/Ring.thy b/src/HOL/Algebra/Ring.thy
--- a/src/HOL/Algebra/Ring.thy
+++ b/src/HOL/Algebra/Ring.thy
@@ -197,6 +197,10 @@
 lemmas a_inv_inj = add.inv_inj
 lemmas minus_equality = add.inv_equality
 
+lemma diff_self: "a \<in> carrier G \<Longrightarrow> a \<ominus> a = \<zero>"
+  by (simp add: a_minus_def r_neg)
+
+
 end
 
 sublocale abelian_group <
@@ -662,6 +666,11 @@
   with R show ?thesis by simp
 qed
 
+lemma (in ring_hom_cring) hom_sub[simp]:
+  assumes "x \<in> carrier R" "y \<in> carrier R"
+  shows "h (x \<ominus> y) = h x \<ominus>\<^bsub>S\<^esub> h y"
+  using assms by (simp add: R.minus_eq S.minus_eq)
+
 lemma (in ring_hom_cring) hom_finsum [simp]:
   "[| finite A; f \<in> A -> carrier R |] ==>
   h (finsum R f A) = finsum S (h o f) A"
diff --git a/src/HOL/Algebra/UnivPoly.thy b/src/HOL/Algebra/UnivPoly.thy
--- a/src/HOL/Algebra/UnivPoly.thy
+++ b/src/HOL/Algebra/UnivPoly.thy
@@ -871,6 +871,32 @@
   deg R (a \<odot>\<^bsub>P\<^esub> p) <= (if a = \<zero> then 0 else deg R p)"
   by (cases "a = \<zero>") (simp add: deg_aboveI deg_aboveD)+
 
+lemma deg_nzero_nzero:
+  assumes deg_p_nzero: "deg R p \<noteq> 0"
+  shows "p \<noteq> \<zero>\<^bsub>P\<^esub>"
+  using deg_zero deg_p_nzero by auto
+
+lemma deg_add_eq:
+  assumes c: "p \<in> carrier P" "q \<in> carrier P"
+  assumes "deg R q \<noteq> deg R p"
+  shows "deg R (p \<oplus>\<^bsub>P\<^esub> q) = max (deg R p) (deg R q)"
+proof -
+  let ?m = "max (deg R p) (deg R q)"
+  from assms have "coeff P p ?m = \<zero> \<longleftrightarrow> coeff P q ?m \<noteq> \<zero>"
+    by (metis deg_belowI lcoeff_nonzero[OF deg_nzero_nzero] linear min_max.le_iff_sup min_max.sup_absorb1)
+  then have "coeff P (p \<oplus>\<^bsub>P\<^esub> q) ?m \<noteq> \<zero>"
+    using assms by auto
+  then have "deg R (p \<oplus>\<^bsub>P\<^esub> q) \<ge> ?m"
+    using assms by (blast intro: deg_belowI)
+  with deg_add[OF c] show ?thesis by arith
+qed
+
+lemma deg_minus_eq:
+  assumes "p \<in> carrier P" "q \<in> carrier P" "deg R q \<noteq> deg R p"
+  shows "deg R (p \<ominus>\<^bsub>P\<^esub> q) = max (deg R p) (deg R q)"
+  using assms by (simp add: deg_add_eq a_minus_def)
+
+
 end
 
 context UP_domain
@@ -1446,6 +1472,70 @@
 
 end
 
+
+context UP_cring begin
+
+lemma evalRR_add:
+  assumes "p \<in> carrier P" "q \<in> carrier P"
+  assumes x:"x \<in> carrier R"
+  shows "eval R R id x (p \<oplus>\<^bsub>P\<^esub> q) = eval R R id x p \<oplus> eval R R id x q"
+proof -
+  interpret UP_pre_univ_prop R R id by unfold_locales simp
+  interpret ring_hom_cring P R "eval R R id x" by unfold_locales (rule eval_ring_hom[OF x])
+  show ?thesis using assms by simp
+qed
+
+lemma evalRR_sub:
+  assumes "p \<in> carrier P" "q \<in> carrier P"
+  assumes x:"x \<in> carrier R"
+  shows "eval R R id x (p \<ominus>\<^bsub>P\<^esub> q) = eval R R id x p \<ominus> eval R R id x q"
+proof -
+  interpret UP_pre_univ_prop R R id by unfold_locales simp
+  interpret ring_hom_cring P R "eval R R id x" by unfold_locales (rule eval_ring_hom[OF x])
+  show ?thesis using assms by simp
+qed
+
+lemma evalRR_mult:
+  assumes "p \<in> carrier P" "q \<in> carrier P"
+  assumes x:"x \<in> carrier R"
+  shows "eval R R id x (p \<otimes>\<^bsub>P\<^esub> q) = eval R R id x p \<otimes> eval R R id x q"
+proof -
+  interpret UP_pre_univ_prop R R id by unfold_locales simp
+  interpret ring_hom_cring P R "eval R R id x" by unfold_locales (rule eval_ring_hom[OF x])
+  show ?thesis using assms by simp
+qed
+
+lemma evalRR_monom:
+  assumes a: "a \<in> carrier R" and x: "x \<in> carrier R"
+  shows "eval R R id x (monom P a d) = a \<otimes> x (^) d"
+proof -
+  interpret UP_pre_univ_prop R R id by unfold_locales simp
+  show ?thesis using assms by (simp add: eval_monom)
+qed
+
+lemma evalRR_one:
+  assumes x: "x \<in> carrier R"
+  shows "eval R R id x \<one>\<^bsub>P\<^esub> = \<one>"
+proof -
+  interpret UP_pre_univ_prop R R id by unfold_locales simp
+  interpret ring_hom_cring P R "eval R R id x" by unfold_locales (rule eval_ring_hom[OF x])
+  show ?thesis using assms by simp
+qed
+
+lemma carrier_evalRR:
+  assumes x: "x \<in> carrier R" and "p \<in> carrier P"
+  shows "eval R R id x p \<in> carrier R"
+proof -
+  interpret UP_pre_univ_prop R R id by unfold_locales simp
+  interpret ring_hom_cring P R "eval R R id x" by unfold_locales (rule eval_ring_hom[OF x])
+  show ?thesis using assms by simp
+qed
+
+lemmas evalRR_simps = evalRR_add evalRR_sub evalRR_mult evalRR_monom evalRR_one carrier_evalRR
+
+end
+
+
 text{*JE: The following lemma was added by me; it might be even lifted to a simpler locale*}
 
 context monoid
@@ -1684,11 +1774,6 @@
   using deg_minus_monom [OF a R_not_trivial]
   using coeff_minus a by auto algebra
 
-lemma deg_nzero_nzero:
-  assumes deg_p_nzero: "deg R p \<noteq> 0"
-  shows "p \<noteq> \<zero>\<^bsub>P\<^esub>"
-  using deg_zero deg_p_nzero by auto
-
 lemma deg_monom_minus:
   assumes a: "a \<in> carrier R"
   and R_not_trivial: "carrier R \<noteq> {\<zero>}"
@@ -1716,25 +1801,7 @@
   assumes a: "a \<in> carrier R"
   shows "eval R R id a (monom P \<one>\<^bsub>R\<^esub> 1 \<ominus>\<^bsub>P\<^esub> monom P a 0) = \<zero>"
   (is "eval R R id a ?g = _")
-proof -
-  interpret UP_pre_univ_prop R R id by unfold_locales simp
-  have eval_ring_hom: "eval R R id a \<in> ring_hom P R" using eval_ring_hom [OF a] by simp
-  interpret ring_hom_cring P R "eval R R id a" by unfold_locales (rule eval_ring_hom)
-  have mon1_closed: "monom P \<one>\<^bsub>R\<^esub> 1 \<in> carrier P" 
-    and mon0_closed: "monom P a 0 \<in> carrier P" 
-    and min_mon0_closed: "\<ominus>\<^bsub>P\<^esub> monom P a 0 \<in> carrier P"
-    using a R.a_inv_closed by auto
-  have "eval R R id a ?g = eval R R id a (monom P \<one> 1) \<ominus> eval R R id a (monom P a 0)"
-    unfolding P.minus_eq [OF mon1_closed mon0_closed]
-    unfolding hom_add [OF mon1_closed min_mon0_closed]
-    unfolding hom_a_inv [OF mon0_closed] 
-    using R.minus_eq [symmetric] mon1_closed mon0_closed by auto
-  also have "\<dots> = a \<ominus> a"
-    using eval_monom [OF R.one_closed a, of 1] using eval_monom [OF a a, of 0] using a by simp
-  also have "\<dots> = \<zero>"
-    using a by algebra
-  finally show ?thesis by simp
-qed
+using assms by (simp add: evalRR_sub evalRR_monom) algebra
 
 lemma remainder_theorem_exist:
   assumes f: "f \<in> carrier P" and a: "a \<in> carrier R"
@@ -1764,31 +1831,18 @@
     and deg_r_0: "deg R r = 0"
     shows "r = monom P (eval R R id a f) 0"
 proof -
-  interpret UP_pre_univ_prop R R id P by default simp
-  have eval_ring_hom: "eval R R id a \<in> ring_hom P R"
-    using eval_ring_hom [OF a] by simp
-  have "eval R R id a f = eval R R id a ?gq \<oplus>\<^bsub>R\<^esub> eval R R id a r"
-    unfolding f_expr using ring_hom_add [OF eval_ring_hom] by auto
-  also have "\<dots> = ((eval R R id a ?g) \<otimes> (eval R R id a q)) \<oplus>\<^bsub>R\<^esub> eval R R id a r"
-    using ring_hom_mult [OF eval_ring_hom] by auto
-  also have "\<dots> = \<zero> \<oplus> eval R R id a r"
-    unfolding eval_monom_expr [OF a] using eval_ring_hom 
-    unfolding ring_hom_def using q unfolding Pi_def by simp
-  also have "\<dots> = eval R R id a r"
-    using eval_ring_hom unfolding ring_hom_def using r unfolding Pi_def by simp
-  finally have eval_eq: "eval R R id a f = eval R R id a r" by simp
   from deg_zero_impl_monom [OF r deg_r_0]
   have "r = monom P (coeff P r 0) 0" by simp
-  with eval_const [OF a, of "coeff P r 0"] eval_eq 
-  show ?thesis by auto
+  with evalRR_monom [OF _ a, of "coeff P r 0" 0]
+  show ?thesis unfolding f_expr by (auto simp: evalRR_simps R.diff_self)
 qed
 
 corollary remainder_theorem:
   assumes f [simp]: "f \<in> carrier P" and a [simp]: "a \<in> carrier R"
   and R_not_trivial: "carrier R \<noteq> {\<zero>}"
-  shows "\<exists> q r. (q \<in> carrier P) \<and> (r \<in> carrier P) \<and> 
+  shows "\<exists> q. (q \<in> carrier P) \<and>
      f = (monom P \<one>\<^bsub>R\<^esub> 1 \<ominus>\<^bsub>P\<^esub> monom P a 0) \<otimes>\<^bsub>P\<^esub> q \<oplus>\<^bsub>P\<^esub> monom P (eval R R id a f) 0"
-  (is "\<exists> q r. (q \<in> carrier P) \<and> (r \<in> carrier P) \<and> f = ?g \<otimes>\<^bsub>P\<^esub> q \<oplus>\<^bsub>P\<^esub> monom P (eval R R id a f) 0")
+  (is "\<exists> q. _ \<and> f = ?g \<otimes>\<^bsub>P\<^esub> _ \<oplus>\<^bsub>P\<^esub> _")
 proof -
   from remainder_theorem_exist [OF f a R_not_trivial]
   obtain q r
